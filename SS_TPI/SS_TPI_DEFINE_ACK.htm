<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <HEAD>
        <meta http-equiv="Content-type" content="text/html;charset=UTF-8">
		<title>SS-TPI-DEFINE</TITLE>
        <SCRIPT SRC="../SS_Util.js" language="JavaScript" type="text/JavaScript"></SCRIPT>
        <LINK href="../SS_PDU_Generator.css" rel="stylesheet" type="text/css">
    </HEAD>
    <body class="PDU_page">        
        <form id="Form1" action="">
            <table ID="Table1">
                    <tr>                    
                        <th align="left">Defined Parties Range Type</th>
                        <td>
                            <select onChange="OnChange_DefinedPartiesRangeType(this.form)" ID="DefinedPartiesRangeType">                          
	                            <option value="0" >No Element
	                            <option selected value="1" >1 Element
	                            <option value="2" >2 Elements
	                            <option value="3" >3 Elements
	                            <option value="4" >4 Elements
	                            <option value="5" >5 Elements
	                            <option value="6" >6 Elements
	                            <option value="7" >7 Elements
	                            <option value="8" >8 Elements
	                            <option value="9" >9 Elements
	                            <option value="10">10 Elements
	                            <option value="11">11 Elements
	                            <option value="12">12 Elements
	                            <option value="13">13 Elements
	                            <option value="14">14 Elements
	                            <option value="15">Range of Elements
	                        </select>
                        </td>
                    </tr>
                    <tr>                    
                        <th align="left">Defined Parties Address Type</th>
                        <td>
                            <select disabled onChange="OnChange_DefinedPartiesAddressType(this.form)" ID="DefinedPartiesAddressType">                          
	                            <option value="0" >SNA
	                            <option value="1" >SSI
	                            <option value="2" >TSI
	                        </select>
                            SNA <input disabled id="DefinedParties_SNA" value="148" size=1>
                            SSI <input disabled id="DefinedParties_SSI" value="62033" size=3>                    
                            TSI SSI <input disabled id="DefinedParties_TSI_SSI" value="61044" size=3>
	                        MCC <input value="234" size=1 disabled ID="DefinedParties_TSI_MCC">
	                        MNC <input value="73" size=1 disabled ID="DefinedParties_TSI_MNC">
                        </td>
                    </tr>
                    <tr>                    
                        <th align="left">Multiple user mask present</th>
                        <td>
                            <select ID="UserMaskPresent">                          
	                            <option value="0" >Not present
	                            <option value="1" >Present
	                        </select>
                        </td>
                    </tr>
                    <tr>                    
                        <th align="left">Definition result</th>
                        <td>
                            <select onChange="OnChange_DefinitionResult(this.form)" ID="DefinitionResult">                          
	                            <option value="0" >Definition unsuccessful
	                            <option value="1" >Definition successful
	                        </select>
                        </td>
                    </tr>
                    <tr>                    
                        <th align="left">Speech call subscription</th>
                        <td>
                            <select disabled onChange="OnChange_SpeechCallSubscription(this.form)" ID="SpeechCallSubscription">                          
	                            <option value="0" >Not subscribed
	                            <option value="1" >Subscribed
	                        </select>
                        </td>
                    </tr>
                    <tr>                    
                        <th align="left">Speech call activation</th>
                        <td>
                            <select disabled onChange="OnChange_SpeechCallActivation(this.form)" ID="SpeechCallActivation">                          
	                            <option selected value="0" >Deactivate
	                            <option value="1" >Activate
	                        </select>
                        </td>
                    </tr>
                    <tr>                    
                        <th align="left">Speech call: talking party mnemonic name</th>
                        <td>
                            <select disabled ID="SpeechMnemonicName">                          
	                            <option value="0" >No mnemonic name sent
	                            <option value="1" >Mnemonic name sent
	                        </select>
                        </td>
                    </tr>
                    <tr>                    
                        <th align="left">Priority levels of the talking party speech requests</th>
                        <td>
                            <select disabled ID="SpeechPriorityLevels">                          
	                            <option value="0" >No priority levels sent
	                            <option value="1" >Priority levels sent
	                        </select>
                        </td>
                    </tr>
                    <tr>                    
                        <th align="left">Data call subscription</th>
                        <td>
                            <select disabled onChange="OnChange_DataCallSubscription(this.form)" ID="DataCallSubscription">                          
	                            <option value="0" >Not subscribed
	                            <option value="1" >Subscribed
	                        </select>
                        </td>
                    </tr>
                    <tr>                    
                        <th align="left">Data call activation</th>
                        <td>
                            <select disabled onChange="OnChange_DataCallActivation(this.form)" ID="DataCallActivation">                          
	                            <option selected value="0" >Deactivate
	                            <option value="1" >Activate
	                        </select>
                        </td>
                    </tr>
                    <tr>                    
                        <th align="left">Data call: sending party mnemonic name</th>
                        <td>
                            <select disabled ID="DataMnemonicName" NAME="DataMnemonicName">                          
	                            <option value="0" >No mnemonic name sent
	                            <option value="1" >Mnemonic name sent
	                        </select>
                        </td>
                    </tr>
                    <tr>                    
                        <th align="left">Priority levels of the talking party speech requests</th>
                        <td>
                            <select disabled ID="DataPriorityLevels" NAME="DataPriorityLevels">                          
	                            <option value="0" >No priority levels sent
	                            <option value="1" >Priority levels sent
	                        </select>
                        </td>
                    </tr>
                    <tr>                    
                        <th align="left">Definition failure cause</th>
                        <td>
                            <select disabled ID="DefinitionFailureCause">                          
	                            <option value="0" >Rejected for any reason
	                            <option value="1" >User not authorized
	                            <option value="2" >Range not supported
	                            <option value="4" >Unknown TETRA identity
	                            <option value="5" >Invalid PDU contents
	                        </select>
                        </td>
                    </tr>
            </table>
        </form>
        <script language="JavaScript" type="text/JavaScript">
    
            function GetPDUValue(pdu_header)
            {
                //Get Information Element values
                DefinedPartiesRangeType         = document.getElementById('DefinedPartiesRangeType').value;

                DefinedPartiesAddressType       = document.getElementById('DefinedPartiesAddressType').value;
                DefinedParties_SNA              = document.getElementById('DefinedParties_SNA').value;                
                DefinedParties_SSI              = document.getElementById('DefinedParties_SSI').value;
                DefinedParties_TSI_SSI          = document.getElementById('DefinedParties_TSI_SSI').value;
                DefinedParties_TSI_MCC          = document.getElementById('DefinedParties_TSI_MCC').value;
                DefinedParties_TSI_MNC          = document.getElementById('DefinedParties_TSI_MNC').value;
                
                UserMaskPresent                 = document.getElementById('UserMaskPresent').value;
                DefinitionResult                = document.getElementById('DefinitionResult').value;
                
                SpeechCallSubscription          = document.getElementById('SpeechCallSubscription').value;
                SpeechCallActivation            = document.getElementById('SpeechCallActivation').value;
                SpeechMnemonicName              = document.getElementById('SpeechMnemonicName').value;
                SpeechPriorityLevels            = document.getElementById('SpeechPriorityLevels').value;
                DataCallSubscription            = document.getElementById('DataCallSubscription').value;
                DataCallActivation              = document.getElementById('DataCallActivation').value;
                DataMnemonicName                = document.getElementById('DataMnemonicName').value;
                DataPriorityLevels              = document.getElementById('DataPriorityLevels').value;
                
                DefinitionFailureCause          = document.getElementById('DefinitionFailureCause').value;
                
                //Build PDU
                pdu_bin_value = pdu_header;
                pdu_bin_addr_value = "";

                pdu_bin_value += dec2bin(DefinedPartiesRangeType,4);
                
                pdu_bin_addr_value = dec2bin(DefinedPartiesAddressType,2);
                if (DefinedPartiesAddressType == "0")
                {
                    pdu_bin_addr_value += dec2bin(DefinedParties_SNA,8);
                }   
                else
                if (DefinedPartiesAddressType == "1")
                {
                    pdu_bin_addr_value += dec2bin(DefinedParties_SSI,24);
                }   
                else
                if (DefinedPartiesAddressType == "2")
                {
                    pdu_bin_addr_value += dec2bin(DefinedParties_TSI_SSI,24);
                    pdu_bin_addr_value += dec2bin(DefinedParties_TSI_MCC,10);
                    pdu_bin_addr_value += dec2bin(DefinedParties_TSI_MNC,14);
                }   
                                
                if (DefinedPartiesRangeType == "15")
                {
                    pdu_bin_value += pdu_bin_addr_value;
                    pdu_bin_value += pdu_bin_addr_value;
                }
                else
                {
                    Nr_of_Addr = parseInt(DefinedPartiesRangeType,10);
                    for (i=0; i<Nr_of_Addr; i+=1)
                    {
                        pdu_bin_value += pdu_bin_addr_value;
                    }
                }       

                pdu_bin_value += dec2bin(UserMaskPresent,1);
                if (UserMaskPresent == "1")
                {
                    UserMaskLength = 0;
                    if (DefinedPartiesRangeType == "15")
                    {
                        UserMaskLength = 18;                        
                    }
                    else
                    {
                        UserMaskLength = parseInt(DefinedPartiesRangeType,10);
                    }       
                    if (UserMaskLength > 0)                 
                    {
                        pdu_bin_addr_value = "";
                        while(pdu_bin_addr_value.length < UserMaskLength)
                            pdu_bin_addr_value += "1";
                        pdu_bin_value += pdu_bin_addr_value; 
                    }                    
                }

                pdu_bin_value += dec2bin(DefinitionResult,1);
                if (DefinitionResult == "1")
                {
                    pdu_bin_value += dec2bin(SpeechCallSubscription,1);
                    if (SpeechCallSubscription == "1")
                    {
                        pdu_bin_value += dec2bin(SpeechCallActivation,1);
                        if (SpeechCallActivation == "1")
                        {
                            pdu_bin_value += dec2bin(SpeechMnemonicName,1);
                            pdu_bin_value += dec2bin(SpeechPriorityLevels,1);
                        }
                    }
                    pdu_bin_value += dec2bin(DataCallSubscription,1);
                    if (DataCallSubscription == "1")
                    {
                        pdu_bin_value += dec2bin(DataCallActivation,1);
                        if (DataCallActivation == "1")
                        {
                            pdu_bin_value += dec2bin(DataMnemonicName,1);
                            pdu_bin_value += dec2bin(DataPriorityLevels,1);
                        }
                    }
                }
                else
                {
                    pdu_bin_value += dec2bin(DefinitionFailureCause,3);
                }

                
                return pdu_bin_value;
            }          

            function OnChange_DefinedPartiesRangeType(form)
            {
                DefinedPartiesRangeType = document.getElementById('DefinedPartiesRangeType').value;

                if (DefinedPartiesRangeType != "0")
                {
                    document.getElementById('DefinedPartiesAddressType').disabled = false;
                }
                else
                {
                    document.getElementById('DefinedPartiesAddressType').disabled = true;
                    document.getElementById('DefinedPartiesAddressType').value = 1;
                }
                
                OnChange_DefinedPartiesAddressType(form);
            }    
            
            function OnChange_DefinedPartiesAddressType(form)
            {
                DefinedPartiesRangeType = document.getElementById('DefinedPartiesRangeType').value;
                DefinedPartiesAddressType = document.getElementById('DefinedPartiesAddressType').value;
                
                document.getElementById('DefinedParties_SNA').disabled = true;
                document.getElementById('DefinedParties_SSI').disabled = true;
                document.getElementById('DefinedParties_TSI_SSI').disabled = true;
                document.getElementById('DefinedParties_TSI_MCC').disabled = true;
                document.getElementById('DefinedParties_TSI_MNC').disabled = true;
                
                if (DefinedPartiesRangeType == "0")
                    return;
                
                if (DefinedPartiesAddressType == "0")
                {
                    document.getElementById('DefinedParties_SNA').disabled = false;
                }
                else if (DefinedPartiesAddressType == "1")
                {
                    document.getElementById('DefinedParties_SSI').disabled = false;
                }
                else if (DefinedPartiesAddressType == "2")
                {
                    document.getElementById('DefinedParties_TSI_SSI').disabled = false;
                    document.getElementById('DefinedParties_TSI_MCC').disabled = false;
                    document.getElementById('DefinedParties_TSI_MNC').disabled = false;
                }
            }
               
            function OnChange_DefinitionResult(form)
            {
                DefinitionResult = document.getElementById('DefinitionResult').value;
               
                document.getElementById('SpeechCallSubscription').disabled = true;
                document.getElementById('SpeechCallActivation').disabled = true;
                document.getElementById('SpeechMnemonicName').disabled = true;
                document.getElementById('SpeechPriorityLevels').disabled = true;
                document.getElementById('DataCallSubscription').disabled = true;
                document.getElementById('DataCallActivation').disabled = true;
                document.getElementById('DataMnemonicName').disabled = true;
                document.getElementById('DataPriorityLevels').disabled = true;
                document.getElementById('DefinitionFailureCause').disabled = true;
                
                if (DefinitionResult == "0")
                {
                    document.getElementById('DefinitionFailureCause').disabled = false;
                    document.getElementById('SpeechCallSubscription').value = 0;
                    document.getElementById('DataCallSubscription').value = 0;
                }
                else
                if (DefinitionResult == "1")
                {
                    document.getElementById('SpeechCallSubscription').disabled = false;
                    document.getElementById('SpeechCallActivation').disabled = false;
                    document.getElementById('SpeechMnemonicName').disabled = false;
                    document.getElementById('SpeechPriorityLevels').disabled = false;
                    document.getElementById('DataCallSubscription').disabled = false;
                    document.getElementById('DataCallActivation').disabled = false;
                    document.getElementById('DataMnemonicName').disabled = false;
                    document.getElementById('DataPriorityLevels').disabled = false;
                }
                
                OnChange_SpeechCallSubscription(form);
                OnChange_DataCallSubscription(form);
            }

            function OnChange_SpeechCallSubscription(form)
            {
                SpeechCallSubscription = document.getElementById('SpeechCallSubscription').value;

                document.getElementById('SpeechCallActivation').disabled = true;
                document.getElementById('SpeechMnemonicName').disabled = true;
                document.getElementById('SpeechPriorityLevels').disabled = true;

                if (SpeechCallSubscription == "1")
                {
                    document.getElementById('SpeechCallActivation').disabled = false;
                    document.getElementById('SpeechMnemonicName').disabled = false;
                    document.getElementById('SpeechPriorityLevels').disabled = false;
                }
                else
                    document.getElementById('SpeechCallActivation').value = 0;
                OnChange_SpeechCallActivation(form);
            }
            
            function OnChange_SpeechCallActivation(form)
            {
                SpeechCallActivation = document.getElementById('SpeechCallActivation').value;
                if (SpeechCallActivation == "1")
                {
                    document.getElementById('SpeechMnemonicName').disabled = false;
                    document.getElementById('SpeechPriorityLevels').disabled = false;
                }
                else
                {
                    document.getElementById('SpeechMnemonicName').disabled = true;
                    document.getElementById('SpeechPriorityLevels').disabled = true;
                }
            }
                        
            function OnChange_DataCallSubscription(form)
            {
                DataCallSubscription = document.getElementById('DataCallSubscription').value;

                document.getElementById('DataCallActivation').disabled = true;
                document.getElementById('DataMnemonicName').disabled = true;
                document.getElementById('DataPriorityLevels').disabled = true;

                if (DataCallSubscription == "1")
                {
                    document.getElementById('DataCallActivation').disabled = false;
                    document.getElementById('DataMnemonicName').disabled = false;
                    document.getElementById('DataPriorityLevels').disabled = false;
                }
                else
                    document.getElementById('DataCallActivation').value = 0;
                OnChange_DataCallActivation(form);
            }
                                   
            function OnChange_DataCallActivation(form)
            {
                DataCallActivation = document.getElementById('DataCallActivation').value;
                if (DataCallActivation == "1")
                {
                    document.getElementById('DataMnemonicName').disabled = false;
                    document.getElementById('DataPriorityLevels').disabled = false;
                }
                else
                {
                    document.getElementById('DataMnemonicName').disabled = true;
                    document.getElementById('DataPriorityLevels').disabled = true;
                }
            }
                                                  
        </script>
    </body>
</HTML>
